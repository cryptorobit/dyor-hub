name: Sync Documentation Branch

on:
  # Run on schedule (every day at midnight)
  schedule:
    - cron: '0 0 * * *'

  # Run when changes are pushed to the apps/docs directory on main branch
  push:
    branches:
      - main
    paths:
      - 'apps/docs/**'

  # Allow manual triggering
  workflow_dispatch:

jobs:
  sync-docs-branch:
    name: Sync docs/gitbook branch with main
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Check if docs/gitbook branch exists
        id: check-branch
        run: |
          if git ls-remote --heads origin docs/gitbook | grep -q 'docs/gitbook'; then
            echo "Branch exists"
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Branch does not exist"
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create docs/gitbook branch if it doesn't exist
        if: steps.check-branch.outputs.branch_exists == 'false'
        run: |
          git checkout -b docs/gitbook
          git push -u origin docs/gitbook

      - name: Sync changes from main to docs/gitbook
        if: steps.check-branch.outputs.branch_exists == 'true'
        run: |
          # Checkout docs/gitbook branch
          git checkout docs/gitbook

          # Get latest changes from origin for both branches
          git fetch origin main
          git fetch origin docs/gitbook

          # Merge changes from main (focusing only on apps/docs directory)
          git merge -X theirs --no-commit origin/main

          # Check if there are conflicts
          if git status | grep -q 'both modified'; then
            echo "Conflicts detected. Using 'ours' strategy to resolve conflicts in apps/docs..."
            git checkout --ours -- apps/docs
            git add apps/docs
          fi

          # Commit the changes
          git commit -m "Sync documentation from main [skip ci]" || echo "No changes to commit"

          # Push changes to docs/gitbook
          git push origin docs/gitbook

      - name: Notify on error
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Failed to sync docs/gitbook branch with main',
              body: 'The GitHub Action to sync the `docs/gitbook` branch with `main` has failed. Please check the [workflow run](https://github.com/' + context.repo.owner + '/' + context.repo.repo + '/actions/runs/' + context.runId + ') for details.'
            })
