name: Docker Build and Push

on:
  push:
    branches: [ main, fix_use_new_machines ]

jobs:
  build-types:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build types
        run: pnpm run build --filter=types
        
      - name: Upload types artifact
        uses: actions/upload-artifact@v4
        with:
          name: types-dist
          path: packages/types/dist
          retention-days: 1

  build-apps:
    needs: build-types
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [api, web]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: |
            apps/${{ matrix.app }}
            packages/types
            pnpm-lock.yaml
            pnpm-workspace.yaml
            package.json
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache dist and next folders
        uses: actions/cache@v4
        with:
          path: |
            apps/${{ matrix.app }}/dist
            apps/${{ matrix.app }}/.next
          key: ${{ runner.os }}-${{ matrix.app }}-build-${{ hashFiles('apps/${{ matrix.app }}/**/*') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.app }}-build-
          
      - name: Download types artifact
        uses: actions/download-artifact@v4
        with:
          name: types-dist
          path: packages/types/dist
          
      - name: Build app
        run: pnpm run build --filter=${{ matrix.app }}
        
      - name: Upload app artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-dist
          path: apps/${{ matrix.app }}/dist
          retention-days: 1

  build-docker:
    needs: build-apps
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host
          platforms: linux/amd64,linux/arm64
          install: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Build and push apps
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/${{ matrix.app }}/Dockerfile.prod
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}/${{ matrix.app }}:latest
          cache-from: |
            type=registry,ref=ghcr.io/${{ github.repository }}/${{ matrix.app }}:buildcache
            type=gha
            type=local,src=/tmp/.buildx-cache
            type=gha,scope=${{ github.ref }}-${{ matrix.app }}
            type=gha,scope=${{ github.ref }}
            type=gha,scope=global
          cache-to: |
            type=registry,ref=ghcr.io/${{ github.repository }}/${{ matrix.app }}:buildcache,mode=max
            type=gha,mode=max
            type=local,dest=/tmp/.buildx-cache-new
            type=gha,mode=max,scope=${{ github.ref }}-${{ matrix.app }}
            type=gha,mode=max,scope=${{ github.ref }}
            type=gha,mode=max,scope=global
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            NODE_ENV=production
            BUILDKIT_SANDBOX_HOSTNAME=buildkitd
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }} 
